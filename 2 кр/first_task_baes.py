# -*- coding: utf-8 -*-

def decision_tree_folding():
    # Ввод данных
    # Ваза 1
    c1 = 60  # Стоимость вазы 1-го типа
    r1 = 2   # Количество красных шаров в вазе 1-го типа
    b1 = 3   # Количество черных шаров в вазе 1-го типа

    # Ваза 2
    c2 = 40  # Стоимость вазы 2-го типа
    r2 = 3   # Количество красных шаров в вазе 2-го типа
    b2 = 2   # Количество черных шаров в вазе 2-го типа

    # Общая стоимость
    c_total = c1 + c2

    # Приоритетные вероятности
    P_V1 = c1 / c_total
    P_V2 = c2 / c_total

    # Вероятности вытащить красный и черный шар из каждой вазы
    Pk_V1 = r1 / (r1 + b1)
    Pch_V1 = b1 / (r1 + b1)

    Pk_V2 = r2 / (r2 + b2)
    Pch_V2 = b2 / (r2 + b2)

    # Совокупные вероятности
    Pk = Pk_V1 * P_V1 + Pk_V2 * P_V2
    Pch = Pch_V1 * P_V1 + Pch_V2 * P_V2

    # Вывод расчетов
    print(f"Вероятность вытащить красный шар из вазы 1-го типа Pк(В1) = {Pk_V1:.2f}.")
    print(f"Вероятность вытащить красный шар из вазы 2-го типа Pк(В2) = {Pk_V2:.2f}.\n")

    print(f"Вероятность вытащить красный шар из вазы 1-го типа с учетом количества ваз:")
    print(f"Pк(В1) = {r1}/{r1 + b1} × {P_V1:.2f} = {Pk_V1:.2f} × {P_V1:.2f} = {Pk_V1 * P_V1:.2f}.\n")

    print(f"Вероятность вытащить черный шар из вазы 1-го типа с учетом количества ваз:")
    print(f"Pч(В1) = {b1}/{r1 + b1} × {P_V1:.2f} = {Pch_V1:.2f} × {P_V1:.2f} = {Pch_V1 * P_V1:.2f}.\n")

    print(f"Вероятность вытащить красный шар из вазы 2-го типа с учетом количества ваз:")
    print(f"Pк(В2) = {r2}/{r2 + b2} × {P_V2:.2f} = {Pk_V2:.2f} × {P_V2:.2f} = {Pk_V2 * P_V2:.2f}.\n")

    print(f"Вероятность вытащить черный шар из вазы 2-го типа с учетом количества ваз:")
    print(f"Pч(В2) = {b2}/{r2 + b2} × {P_V2:.2f} = {Pch_V2:.2f} × {P_V2:.2f} = {Pch_V2 * P_V2:.2f}.\n")

    print(f"Вероятность вытащить красный шар из ваз Pк = {Pk_V1 * P_V1:.2f} + {Pk_V2 * P_V2:.2f} = {Pk:.2f}.")
    print(f"Вероятность вытащить черный шар из ваз Pч = {Pch_V1 * P_V1:.2f} + {Pch_V2 * P_V2:.2f} = {Pch:.2f}.\n")

    print(f"Вероятность того, что это ваза 1-го типа P(В1) = {c1}/{c_total} = {P_V1:.2f}.")
    print(f"Вероятность того, что это ваза 2-го типа P(В2) = {c2}/{c_total} = {P_V2:.2f}.\n")

    print("По формуле Байеса находятся вероятности P(В1|к), P(В1|ч), P(В2|к), P(В2|ч).\n")

    # Расчеты по формуле Байеса
    # После вытягивания красного шара
    P_V1_k = (Pk_V1 * P_V1) / Pk
    P_V2_k = (Pk_V2 * P_V2) / Pk

    # После вытягивания черного шара
    P_V1_ch = (Pch_V1 * P_V1) / Pch
    P_V2_ch = (Pch_V2 * P_V2) / Pch

    print(f"P(В1|к) = [Pк(В1) × P(В1)] / Pк")
    print(f"P(В1|к) = ({Pk_V1:.2f} × {P_V1:.2f}) / {Pk:.2f} = {P_V1_k:.2f}\n")

    print(f"P(В2|к) = [Pк(В2) × P(В2)] / Pк")
    print(f"P(В2|к) = ({Pk_V2:.2f} × {P_V2:.2f}) / {Pk:.2f} = {P_V2_k:.2f}\n")

    print(f"P(В1|ч) = [Pч(В1) × P(В1)] / Pч")
    print(f"P(В1|ч) = ({Pch_V1:.2f} × {P_V1:.2f}) / {Pch:.2f} = {P_V1_ch:.2f}\n")

    print(f"P(В2|ч) = [Pч(В2) × P(В2)] / Pч")
    print(f"P(В2|ч) = ({Pch_V2:.2f} × {P_V2:.2f}) / {Pch:.2f} = {P_V2_ch:.2f}")


decision_tree_folding()
